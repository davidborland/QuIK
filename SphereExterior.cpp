///////////////////////////////////////////////////////////////////////////////////////////////
//
// Name:        SphereExterior.cpp
//
// Author:      David Borland
//
// Description: Class that represents the interior of a sphere.
//
/////////////////////////////////////////////////////////////////////////////////////////////// 


#include "SphereExterior.h"

#include <math.h>


///////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
///////////////////////////////////////////////////////////////////////////////////////////////

SphereExterior::SphereExterior() : Sphere() {
}

SphereExterior::SphereExterior(const Vec3& c, double r) : Sphere(c, r) {
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Destructor
///////////////////////////////////////////////////////////////////////////////////////////////

SphereExterior::~SphereExterior() {
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Utilities
///////////////////////////////////////////////////////////////////////////////////////////////

Vec3 SphereExterior::ClosestPoint(const Vec3& p) const {
    Vec3 v = p - _c;
    if (v.Magnitude() >= _r) {
        return p;
    }
    else {
        v.Normalize();

        return _c + v * _r;
    }
}

bool SphereExterior::IsValid(const Vec3 &p) const {
    return _c.Distance(p) >= _r - epsilon;
}