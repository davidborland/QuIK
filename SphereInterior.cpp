///////////////////////////////////////////////////////////////////////////////////////////////
//
// Name:        SphereInterior.cpp
//
// Author:      David Borland
//
// Description: Class that represents the interior of a sphere.
//
/////////////////////////////////////////////////////////////////////////////////////////////// 


#include "SphereInterior.h"

#include <math.h>


///////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
///////////////////////////////////////////////////////////////////////////////////////////////

SphereInterior::SphereInterior() : Sphere() {
}

SphereInterior::SphereInterior(const Vec3& c, double r) : Sphere(c, r) {
}

///////////////////////////////////////////////////////////////////////////////////////////////
// Destructor
///////////////////////////////////////////////////////////////////////////////////////////////

SphereInterior::~SphereInterior() {
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Utilities
///////////////////////////////////////////////////////////////////////////////////////////////

Vec3 SphereInterior::ClosestPoint(const Vec3& p) const {
    Vec3 v = p - _c;
    if (v.Magnitude() <= _r) {
        return p;
    }
    else {
        v.Normalize();

        return _c + v * _r;
    }
}

bool SphereInterior::IsValid(const Vec3 &p) const {
    return _c.Distance(p) <= _r + epsilon;
}